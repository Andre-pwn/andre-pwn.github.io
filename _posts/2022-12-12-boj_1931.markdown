---
title: "[BOJ] 회의실 배정 - 1931 (S1)"
author: kwon
date: 2022-12-12T23:00:00 +0900
categories: [boj, silver]
tags: [greedy algorithm, sort]
math: true
mermaid: false
---
| 시간 제한 | 메모리 제한 |
| --- | --- |
| 2초 | 128 MB |

# 문제
한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

# 입력
첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 시작 시간과 끝나는 시간은 $2^31-1$보다 작거나 같은 자연수 또는 0이다.

# 출력
첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.

**끝나는 시간을 기준으로 먼저 정렬**하고 같으면 시작하는 시간을 기준으로 정렬하는 것이 핵심이다.

이렇게 정렬을 하게 되면 항상 그 시간에 시작하는 회의 중 가장 빨리 끝나는 회의를 선택할 수 있으며, 끝나는 시간 이후에 시작하는 회의 중 가장 빨리 끝나는 회의도 바로 선택할 수 있다.

## 코드

```python
n = int(input())
meetings = []

for _ in range(n):
    s, f = map(int, input().split())
    meetings.append((s, f))

meetings.sort(key=lambda x: (x[1], x[0]))

cur = 0
cnt = 0
for s, f in meetings:
    if cur <= s:
        cur = f
        cnt += 1
print(cnt)
```

앞서 말한 기준에 맞게 정렬을 하고 현재 선택한 회의가 끝나는 시간보다 더 늦게 시작하는 첫 회의를 선택하면 항상 최적의 선택을 할 수 있다.